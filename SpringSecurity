https://qburst.udemy.com/course/spring-security-zero-to-master/learn/lecture/22516340#overview

User details in memory instead of reading application.properties file.
User implements UserDetailsInterface
UserDetailsService extends UserDetailsInterface
UserDetailsManager extends UserDetailsService
InMemoryUserDetailsManager, JdbcUserDetailsManager and LdapUserDetailsManager are implementations of UserDetailsManager interface.
For testing purposes we can use InMemoryUserDetailsManager where user credentials are stored in apllication memory.
For production ready applications, JdbcUserDetailsManager could be used.

Default spring sec process:
User enters username and password -> Security gets the user details with the user name using loadUsersByUsername method. The password entered by the user and stored in the db are matched. If they are the same, then login succesful else fails.
Encoding - Base64
Encyption - Symmetrical(public key) and asymmetrical(private key)
PasswordEncoder Interface -> encode, matches, upgradeEncoding methods
Different implementations of PasswordEncoders provided by Spring Security :
NoOpPasswordEncoder
StandardPasswordEncoder
Pbkdf2PasswordEncoder
BCryptPasswordEncoder
SCryptPasswordEncoder


Skipped tutorials : 27-Creating our own custom implementation of UserDetailsService.